class Solution {
    
    //150. Evaluate Reverse Polish Notation
    //Time complexity : O(n) where n is the length of the tokens array
    //Space complexity : O(n)
    public int evalRPN(String[] tokens) {
        
       if(tokens.length ==1)
       return Integer.parseInt(tokens[0]);
        
        Stack<Integer> st = new Stack<>();
        HashSet<String> set = new HashSet<>();
        set.add("+");
        set.add("-");
        set.add("*");
        set.add("/");
        
        for(String s : tokens){
            if(set.contains(s)){
                int first = st.pop();
                int second = st.pop();
                if(s.equals("+"))
                    st.push(second+first);
               else if(s.equals("-"))
                    st.push(second - first);
                
               else if(s.equals("*"))
                    st.push(second * first);       
                else if(s.equals("/"))
                    st.push(second / first);
                
               
            }
             else
                    st.push(Integer.parseInt(s));
        }
        return st.pop();
    }
               
}